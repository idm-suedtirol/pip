// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package it.bz.tis.alpenstaedte;

import it.bz.tis.alpenstaedte.ProjectStatus;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect ProjectStatus_Roo_Finder {
    
    public static Long ProjectStatus.countFindProjectStatusesByNameEquals(String name) {
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        EntityManager em = ProjectStatus.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM ProjectStatus AS o WHERE o.name = :name", Long.class);
        q.setParameter("name", name);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<ProjectStatus> ProjectStatus.findProjectStatusesByNameEquals(String name) {
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        EntityManager em = ProjectStatus.entityManager();
        TypedQuery<ProjectStatus> q = em.createQuery("SELECT o FROM ProjectStatus AS o WHERE o.name = :name", ProjectStatus.class);
        q.setParameter("name", name);
        return q;
    }
    
    public static TypedQuery<ProjectStatus> ProjectStatus.findProjectStatusesByNameEquals(String name, String sortFieldName, String sortOrder) {
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        EntityManager em = ProjectStatus.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM ProjectStatus AS o WHERE o.name = :name");
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            queryBuilder.append(" ORDER BY ").append(sortFieldName);
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                queryBuilder.append(" ").append(sortOrder);
            }
        }
        TypedQuery<ProjectStatus> q = em.createQuery(queryBuilder.toString(), ProjectStatus.class);
        q.setParameter("name", name);
        return q;
    }
    
}
